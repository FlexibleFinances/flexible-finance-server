openapi: 3.0.3
servers:
  - url: https://flexible-finance-server.herokuapp.com/v1
    description: Production server
  - url: http://localhost:5001/v1
    description: Local server
info:
  description: >-
    This is the server for Flexible Finance.
  version: 1.0.0
  title: OpenAPI Flexible Finance
  license:
    name: Apache-2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
#tags:
paths:
  /accounts:
    $ref: ./app/routes/account.openapi.yml#/AccountsRequests
  /accounts/{AccountId}:
    $ref: ./app/routes/account.openapi.yml#/AccountIdRequests
  /auth/signup:
    $ref: ./app/routes/auth.openapi.yml#/SignUp
  /auth/signin:
    $ref: ./app/routes/auth.openapi.yml#/SignIn
  /api-docs:
    get:
      security: []
      responses:
        200:
          description: Returns API documentation.
          content:
            text/html:
              schema:
                type: string
  /entities:
    $ref: ./app/routes/entity.openapi.yml#/EntitiesRequests
  /entities/{EntityId}:
    $ref: ./app/routes/entity.openapi.yml#/EntityIdRequests
  /fields:
    $ref: ./app/routes/field.openapi.yml#/FieldsRequests
  /fields/{FieldId}:
    $ref: ./app/routes/field.openapi.yml#/FieldIdRequests
  /fieldData:
    $ref: ./app/routes/fieldDatum.openapi.yml#/FieldDataRequests
  /fieldData/{FieldDatumId}:
    $ref: ./app/routes/fieldDatum.openapi.yml#/FieldDatumIdRequests
  /fieldTypes:
    $ref: ./app/routes/fieldType.openapi.yml#/FieldTypesRequests
  /fieldTypes/{FieldTypeId}:
    $ref: ./app/routes/fieldType.openapi.yml#/FieldTypeIdRequests
  /groups:
    $ref: ./app/routes/group.openapi.yml#/GroupsRequests
  /groups/{GroupId}:
    $ref: ./app/routes/group.openapi.yml#/GroupIdRequests
  /roles:
    $ref: ./app/routes/role.openapi.yml#/RolesRequests
  /roles/{RoleId}:
    $ref: ./app/routes/role.openapi.yml#/RoleIdRequests
  /tags:
    $ref: ./app/routes/tag.openapi.yml#/TagsRequests
  /tags/{TagId}:
    $ref: ./app/routes/tag.openapi.yml#/TagIdRequests
  /test/all:
    $ref: ./app/routes/authTest.openapi.yml#/TestAll
  /test/user:
    $ref: ./app/routes/authTest.openapi.yml#/TestUser
  /test/admin:
    $ref: ./app/routes/authTest.openapi.yml#/TestAdmin
  /transactions:
    $ref: ./app/routes/transaction.openapi.yml#/TransactionsRequests
  /transactions/{TransactionId}:
    $ref: ./app/routes/transaction.openapi.yml#/TransactionIdRequests
  /users:
    $ref: ./app/routes/user.openapi.yml#/UsersRequests
  /users/{UserId}:
    $ref: ./app/routes/user.openapi.yml#/UserIdRequests
components:
  parameters:
    path_id:
      name: id
      in: path
      required: true
      schema:
        type: integer
    query_accountIds:
      name: accountIds
      in: query
      schema:
        type: array
        items:
          type: number
    query_entityIds:
      name: entityIds
      in: query
      schema:
        type: array
        items:
          type: number
    query_fieldIds:
      name: fieldIds
      in: query
      schema:
        type: array
        items:
          type: number
    query_fieldDatumIds:
      name: fieldDatumIds
      in: query
      schema:
        type: array
        items:
          type: number
    query_fieldTypeIds:
      name: fieldTypeIds
      in: query
      schema:
        type: array
        items:
          type: number
    query_groupIds:
      name: groupIds
      in: query
      schema:
        type: array
        items:
          type: number
    query_isTemplate:
      name: isTemplate
      in: query
      schema:
        type: boolean
    query_limit:
      name: limit
      in: query
      schema:
        type: integer
    query_offset:
      name: offset
      in: query
      schema:
        type: integer
    query_name:
      name: name
      in: query
      schema:
        type: string
    query_roleIds:
      name: roleIds
      in: query
      schema:
        type: array
        items:
          type: number
    query_tagIds:
      name: tagIds
      in: query
      schema:
        type: array
        items:
          type: number
    query_templateIds:
      name: templateIds
      in: query
      schema:
        type: array
        items:
          type: number
    query_transactionIds:
      name: transactionIds
      in: query
      schema:
        type: array
        items:
          type: number
    query_userIds:
      name: userIds
      in: query
      schema:
        type: array
        items:
          type: number
  requestBodies:
    FieldDatum:
      $ref: ./app/apiDtos/fieldDatum.openapi.yml#/RequestBody
  responses:
    Message:
      description: a simple response with just a message
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Message"
    Account:
      $ref: ./app/routes/account.openapi.yml#/AccountResponse
    Accounts:
      $ref: ./app/routes/account.openapi.yml#/AccountsResponse
    Entity:
      $ref: ./app/routes/entity.openapi.yml#/EntityResponse
    Entities:
      $ref: ./app/routes/entity.openapi.yml#/EntitiesResponse
    Field:
      $ref: ./app/routes/field.openapi.yml#/FieldResponse
    Fields:
      $ref: ./app/routes/field.openapi.yml#/FieldsResponse
    FieldDatum:
      $ref: ./app/routes/fieldDatum.openapi.yml#/FieldDatumResponse
    FieldData:
      $ref: ./app/routes/fieldDatum.openapi.yml#/FieldDataResponse
    FieldType:
      $ref: ./app/routes/fieldType.openapi.yml#/FieldTypeResponse
    FieldTypes:
      $ref: ./app/routes/fieldType.openapi.yml#/FieldTypesResponse
    Group:
      $ref: ./app/routes/group.openapi.yml#/GroupResponse
    Groups:
      $ref: ./app/routes/group.openapi.yml#/GroupsResponse
    Role:
      $ref: ./app/routes/role.openapi.yml#/RoleResponse
    Roles:
      $ref: ./app/routes/role.openapi.yml#/RolesResponse
    Tag:
      $ref: ./app/routes/tag.openapi.yml#/TagResponse
    Tags:
      $ref: ./app/routes/tag.openapi.yml#/TagsResponse
    Transaction:
      $ref: ./app/routes/transaction.openapi.yml#/TransactionResponse
    Transactions:
      $ref: ./app/routes/transaction.openapi.yml#/TransactionsResponse
    User:
      $ref: ./app/routes/user.openapi.yml#/UserResponse
    Users:
      $ref: ./app/routes/user.openapi.yml#/UsersResponse
  schemas:
    Message:
      type: object
      properties:
        message:
          type: string
    Account:
      $ref: ./app/apiDtos/account.openapi.yml#/AccountSchema
    AccountTemplate:
      $ref: ./app/apiDtos/account.openapi.yml#/AccountTemplateSchema
    Entity:
      $ref: ./app/apiDtos/entity.openapi.yml#/EntitySchema
    EntityTemplate:
      $ref: ./app/apiDtos/entity.openapi.yml#/EntityTemplateSchema
    Field:
      $ref: ./app/apiDtos/field.openapi.yml#/FieldSchema
    FieldDatum_BoolAccount:
      $ref: ./app/apiDtos/fieldDatum.openapi.yml#/BoolAccount_FieldDatumSchema
    FieldDatum_BoolEntity:
      $ref: ./app/apiDtos/fieldDatum.openapi.yml#/BoolEntity_FieldDatumSchema
    FieldDatum_BoolTransaction:
      $ref: ./app/apiDtos/fieldDatum.openapi.yml#/BoolTransaction_FieldDatumSchema
    FieldDatum_DateAccount:
      $ref: ./app/apiDtos/fieldDatum.openapi.yml#/DateAccount_FieldDatumSchema
    FieldDatum_DateEntity:
      $ref: ./app/apiDtos/fieldDatum.openapi.yml#/DateEntity_FieldDatumSchema
    FieldDatum_DateTransaction:
      $ref: ./app/apiDtos/fieldDatum.openapi.yml#/DateTransaction_FieldDatumSchema
    FieldDatum_IntAccount:
      $ref: ./app/apiDtos/fieldDatum.openapi.yml#/IntAccount_FieldDatumSchema
    FieldDatum_IntEntity:
      $ref: ./app/apiDtos/fieldDatum.openapi.yml#/IntEntity_FieldDatumSchema
    FieldDatum_IntTransaction:
      $ref: ./app/apiDtos/fieldDatum.openapi.yml#/IntTransaction_FieldDatumSchema
    FieldDatum_StringAccount:
      $ref: ./app/apiDtos/fieldDatum.openapi.yml#/StringAccount_FieldDatumSchema
    FieldDatum_StringEntity:
      $ref: ./app/apiDtos/fieldDatum.openapi.yml#/StringEntity_FieldDatumSchema
    FieldDatum_StringTransaction:
      $ref: ./app/apiDtos/fieldDatum.openapi.yml#/StringTransaction_FieldDatumSchema
    FieldType:
      $ref: ./app/apiDtos/fieldType.openapi.yml#/FieldTypeSchema
    Group:
      $ref: ./app/apiDtos/group.openapi.yml#/GroupSchema
    Role:
      $ref: ./app/apiDtos/role.openapi.yml#/RoleSchema
    Tag:
      $ref: ./app/apiDtos/tag.openapi.yml#/TagSchema
    Transaction:
      $ref: ./app/apiDtos/transaction.openapi.yml#/TransactionSchema
    TransactionTemplate:
      $ref: ./app/apiDtos/transaction.openapi.yml#/TransactionTemplateSchema
    Transactor:
      $ref: ./app/apiDtos/transactor.openapi.yml#/TransactorSchema
    User:
      $ref: ./app/apiDtos/user.openapi.yml#/UserSchema
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
#  parameters:
security:
  - bearerAuth: []
